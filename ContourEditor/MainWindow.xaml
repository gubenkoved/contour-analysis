<Window x:Class="ContourEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ContourEditor"
        xmlns:lib="clr-namespace:ContoursControlLibrary;assembly=ContoursControlLibrary"
        Title="Contour Editor" Height="686" Width="971"
        TextOptions.TextFormattingMode="Display" ResizeMode="NoResize"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Name="MainWin" Loaded="MainWin_Loaded">
    <Window.CommandBindings>
        <CommandBinding  Command="New" Executed="NewCommand_Executed"/>
        <CommandBinding  Command="Open" Executed="OpenCommand_Executed"/>
        <CommandBinding  Command="local:Commands.AddFrom" Executed="AddFromCommand_Executed"/>
        <CommandBinding  Command="SaveAs" Executed="SaveAsCommand_Executed"/>
        <CommandBinding  Command="Save" Executed="SaveCommand_Executed"/>
        <CommandBinding  Command="local:Commands.AddContour" Executed="AddContourCommand_Executed"/>
        <CommandBinding  Command="local:Commands.ForceUpdate" Executed="ForceUpdateCommand_Executed"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Background="WhiteSmoke">
            <MenuItem Header="Collection">
                <MenuItem Command="New" Header="New" />
                <MenuItem Command="Open" Header="Open ..."/>
                <MenuItem Command="local:Commands.AddFrom" Header="Add from ..." />
                <MenuItem Command="Save" Header="Save"/>
                <MenuItem Command="SaveAs" Header="Save as ..." />
            </MenuItem>
            <MenuItem Header="Contour" >
                <MenuItem Command="local:Commands.AddContour" />
                <Separator />
                <MenuItem IsCheckable="True" Header="Is closed contour" IsChecked="{Binding Path=IsClosedContour, ElementName=ContourInput}"/>
            </MenuItem>
            <MenuItem Header="Settings" >
                <MenuItem IsCheckable="True" Header="Check both directions" IsChecked="{Binding Path=CheckBothDirections}"/>
                <Separator />
                <MenuItem IsCheckable="True" Header="Auto update info in collection (may be slow with big collection)" IsChecked="{Binding Path=AutoUpdateInfoInCollection}"/>
                <MenuItem Header="Force update info in collection" Command="local:Commands.ForceUpdate"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1" Margin="5" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border BorderThickness="1" BorderBrush="Gray" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" CornerRadius="0">
                    <Grid>
                        <TextBlock Text="Draw contour here" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="36" Foreground="#30000000" />
                    <lib:ContourInputControl 
                        x:Name="ContourInput"
                        IsClosedContour="True"                        
                        RawContourStyle="{StaticResource RawContourPolylineStyle}" 
                        SimplifiedContourStyle="{StaticResource SimplifiedContourPolylineStyle}"
                        SimplifiedContourMarkerStyle="{StaticResource SimplifiedContourMarkerStyle}" />
                    </Grid>
                </Border>
                <Grid Grid.Row="1" Margin="0,2,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Path=TargetLength, ElementName=ContourInput, StringFormat=Accuracy: \{0\} points}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,0,4,0" />
                    <Slider Grid.Column="1" Minimum="2" Maximum="100" Value="{Binding Path=TargetLength, ElementName=ContourInput}"/>
                </Grid>
            </Grid>
            <Grid Grid.Column="1" Margin="3,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100" />
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border BorderThickness="2" BorderBrush="Green" Margin="0,0,0,2" Padding="2" Background="#1E008000" CornerRadius="2">
                    <Grid>
                        <TextBlock Text="Best match" FontSize="24" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="White" Margin="0,0,60,0" />
                        <lib:ContourInfoPresenterControl 
                            x:Name="BestMatchContourInfoPresenter"
                            lib:ContourPresenterControl.ContourStyle="{StaticResource BoldContourPolylineStyle}"
                            lib:ContourPresenterControl.MarkerStyle="{StaticResource BoldMarkerStyle}"
                            lib:ContourPresenterControl.MarkerSize="4,4"
                            TextBlock.FontSize="14"/>
                    </Grid>
                </Border>
                <lib:ContourCollectionPresenter 
                        Grid.Row="1" 
                        x:Name="ContoursPresenter" 
                        Contours="{Binding ElementName=MainWin, Path=Contours}"
                        ItemHeight="40"/>
                <TextBlock Grid.Row="2" Text="{Binding ElementName=MainWin, Path=Contours.Count, StringFormat=\{0\} contour(s)}" HorizontalAlignment="Right" />
            </Grid>
        </Grid>
    </Grid>
</Window>
